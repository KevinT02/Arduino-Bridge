int motorfor = 12;
int motorbac = 13;

const int trigPin = 9;
const int echoPin = 10;

// defines variables
long duration;
int distance;

//-----------------------------------------//  
//---------------FUNCTIONS-----------------//

void extend(int time)
{
  digitalWrite(motorfor,HIGH);
  delay(time);
  digitalWrite(motorfor,LOW);
  delay(time);
}

void retract(int time)
{
  digitalWrite(motorbac,HIGH);
  delay(time);
  digitalWrite(motorbac,LOW);
  delay(time);
}

void halt()
{
  analogWrite(motorfor,LOW);
  analogWrite(motorbac,LOW);
}


void setup() {
  Serial.begin(9600);

  //-- Setup Motors
  pinMode(motorfor, OUTPUT);
  pinMode(motorbac, OUTPUT); 

 //pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output

  }

void loop() {

  //---Prepping QTI Line Sensor---//
  
  //Charge capacitor for 1ms
  pinMode(2, OUTPUT);
  digitalWrite(2, HIGH);
  delay(1);

  //Wait 1ms and let capacitor discharge
  pinMode(2, INPUT);
  delay(1);

  

  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration*0.034/2;
  

  //Read pin 2 values
  byte sensor = digitalRead(2);
   

  Serial.print("Sensor: ");
  Serial.print(sensor);
  Serial.print(" Distance: ");
  Serial.println(distance, "/n");



  //----------Motion---------//
  
  //QTI Sensor
  if (sensor == 1)
  {
    extend(3000);
    retract(3000);    
  }
  
  else
  {
    halt(); 
  }


//  //Ultra Sonic Sensor
//  if (distance < 15)
//  {
//    extend(3000);
//    retract(3000);      
//  }
//  
//  else
//  {
//    halt(); 
//  }
   
}


